// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

//Links
@mixin links ($link, $hover) {
	a {
		color: $link;
		&:hover, &:focus, &:active {
		  color: $hover;   
		}
	}
}

//Layout padding
@mixin padding-layout($padding: 1) {
	padding-left: $padding * 1em;
	padding-right: $padding * 1em;
}

@mixin padding-section($top: $section-top, $bottom: $section-bottom) {
	padding-top: $top;
    padding-bottom: $bottom;
}

//Border
@mixin border-all($width, $style, $color) {
    border-width: $width;
    border-style: $style;
    border-color: $color;
}

//Overlay
@mixin overlay($position, $w: 100%, $h: 100%, $t: 0, $r: 0, $b: 0, $l: 0, $z: 9999) {
	position: $position;
    width: $w;
    height: $h;
    top: $t;
    right: $r;
    bottom: $b;
    left: $l;
    z-index: $z;
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  // display: $display;
  position: $pos;
}

//Triangle
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if  $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

//Hexagon Icon
@mixin i-hexagon($width, $height, $color, $color-i: #fff, $dur: $base-duration) {
	// position: absolute;
    width: $width;
    height: $height;
    background: $color;
    margin-top: $height/2;
    margin-bottom: $height/2;
    @include transition($dur);
    &:before, &:after {
        content: "";
        position: absolute;
        width: 0;
        left: 0;
        border-left: ($width/2 + 0.5px) solid transparent;
        border-right: $width/2 solid transparent;
        @include transition($dur);
    }
    &:before {
        bottom: 100%;
        border-bottom: $height/2 solid $color;
    }
    &:after {
        top: 100%;
        border-top: $height/2 solid $color;
    }
    & i {
        font-size: $width/2 + 1px;
        color: $color-i;
        line-height: $height;
        text-align: center;
        width: $width;
    }
}

//Hexagon
@mixin hexagon($width, $height, $color, $dur: $base-duration) {
	// position: absolute;
    width: $width;
    height: $height;
    background: $color;
    margin-top: $height/2;
    margin-bottom: $height/2;
    @include transition($dur);
    &:before, &:after {
        content: "";
        position: absolute;
        width: 0;
        left: 0;
        border-left: ($width/2 + 0.5px) solid transparent;
        border-right: $width/2 solid transparent;
        @include transition($dur);
    }
    &:before {
        bottom: 100%;
        border-bottom: $height/2 solid $color;
    }
    &:after {
        top: 100%;
        border-top: $height/2 solid $color;
    }
}

// --------------------------------------------------------------------
// Breakpoints from Juice
// --------------------------------------------------------------------

// Breakpoints variable
$onepx: em-calc(1) !default;
$hdpi-ratio-default: 1.3 !default;
$breakpoint-xlarge-default: em-calc(1920) !default;
$breakpoint-large-default: em-calc(1440) !default;
$breakpoint-medium-default: em-calc(1024) !default;
$breakpoint-small-default: em-calc(640) !default;
$breakpoint-xsmall-default: em-calc(480) !default;
$breakpoint-xxsmall-default: em-calc(320) !default;

// Breakpoints
$breakpoints: (
	"xxlarge":	"(min-width: #{$breakpoint-xlarge-default + $onepx})",
	"xlarge-only":	"(min-width: #{$breakpoint-large-default + $onepx}) and (max-width: #{$breakpoint-xlarge-default})",
	"xlarge-up":	"(min-width: #{$breakpoint-large-default + $onepx})",
	"xlarge":	"(max-width: #{$breakpoint-xlarge-default})",
	"large-only":	"(min-width: #{$breakpoint-medium-default + $onepx}) and (max-width: #{$breakpoint-large-default})",
	"large-up":	"(min-width: #{$breakpoint-medium-default + $onepx})",
	"large":	"(max-width: #{$breakpoint-large-default})",
	"medium-only":	"(min-width: #{$breakpoint-small-default + $onepx}) and (max-width: #{$breakpoint-medium-default})",
	"medium-up":	"(min-width: #{$breakpoint-small-default + $onepx})",
	"medium":	"(max-width: #{$breakpoint-medium-default})",
	"small-only":	"(min-width: #{$breakpoint-xsmall-default + $onepx}) and (max-width: #{$breakpoint-small-default})",
	"small-up":	"(min-width: #{$breakpoint-xsmall-default + $onepx})",
	"small":	"(max-width: #{$breakpoint-small-default})",
	"xsmall-only":	"(min-width: #{$breakpoint-xxsmall-default + $onepx}) and (max-width: #{$breakpoint-xsmall-default})",
	"xsmall-up":	"(min-width: #{$breakpoint-xxsmall-default + $onepx})",
	"xsmall":	"(max-width: #{$breakpoint-xsmall-default})",
	"xxsmall":	"(max-width: #{$breakpoint-xxsmall-default})",
	"iphone3":	"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1)",
	"iphone3-landscape":	"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1) and (orientation: landscape)",
	"iphone3-portrait":	"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1) and (orientation: portrait)",
	"iphone4":	"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3)",
	"iphone4-landscape":	"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3) and (orientation: landscape)",
	"iphone4-portrait":	"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3) and (orientation: portrait)",
	"iphone5":	"(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71)",
	"iphone5-landscape":	"(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71) and (orientation: landscape)",
	"iphone5-portrait":	"(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71) and (orientation: portrait)",
	"iphone6":	"(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2)",
	"iphone6-landscape":	"(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)",
	"iphone6-portrait":	"(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)",
	"iphone6-plus":	"(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3)",
	"iphone6-plus-landscape":	"(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)",
	"iphone6-plus-portrait":	"(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)",
	"ipad":	"(min-device-width: 768px) and (max-device-width: 1024px)",
	"ipad-landscape":	"(min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape)",
	"ipad-portrait":	"(min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait)",
	"ipad-retina":	"(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2)",
	"ipad-retina-landscape":	"(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)",
	"ipad-retina-portrait":	"(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)",
	"hdpi":	"(-webkit-min-device-pixel-ratio: $hdpi-ratio-default), only screen and (min--moz-device-pixel-ratio: $hdpi-ratio-default), only screen and (-moz-min-device-pixel-ratio: $hdpi-ratio-default),	only screen and (-o-min-device-pixel-ratio: #{$hdpi-ratio-default}/1), only screen and (min-resolution: #{round($hdpi-ratio-default*96)}dpi), only screen and (min-resolution: #{$hdpi-ratio-default}dppx)"
);
@mixin bp($break, $viewport1: null) {
	// preset breakpoint
	@if not $viewport1 {
		@if map-has-key($breakpoints, $break) {
			@media only screen and #{map-get($breakpoints, $break)} { @content; }
		}
		@else {
			@warn "Couldn't find a breakpoint named #{$break}.";
		}
	}
	@else {
		// min breakpoint
		@if $break == min {
			@media screen and (min-width: $viewport1) { @content; }
		}
		// max breakpoint
		@else if $break == max {
			@media screen and (max-width: $viewport1) { @content; }
		}
		// min & max breakpoint
		@else {
			@media screen and (min-width: $break) and (max-width: $viewport1) { @content; }
		}
	}
}

// Prefix mixin if needed
// Credit: http://bourbon.io/docs/#prefixer
@mixin juice-prefixer($property, $value, $prefixes) {
	@each $prefix in $prefixes {
		@if $prefix == webkit {
			-webkit-#{$property}: #{$value};
		}
		@else if $prefix == moz {
			-moz-#{$property}: #{$value};
		}
		@else if $prefix == ms {
			-ms-#{$property}: #{$value};
		}
		@else if $prefix == o {
			-o-#{$property}: #{$value};
		}
		@else if $prefix == spec {
			#{$property}: #{$value};
		}
		@else  {
			@warn "Unrecognized prefix: #{$prefix}";
		}
	}
}

//Transition default
@mixin transition($dur: $base-duration, $prop: all, $ease: ease-in-out) {
	@include juice-prefixer(transition, $prop $dur $ease, webkit spec);
}

//Transforms
@mixin translateX($val) {
	@include juice-prefixer(transform, translateX($val), webkit ms spec);
}

@mixin translateY($val) {
	@include juice-prefixer(transform, translateY($val), webkit ms spec);
}

@mixin scale($val) {
	@include juice-prefixer(transform, scale($val), webkit ms spec);
}

@mixin rotate($val) {
	@include juice-prefixer(transform, rotate($val), webkit ms spec);
}
